spring.application.name=ChronoVaccin
spring.datasource.url=jdbc:postgresql://localhost:5434/postgres
spring.datasource.username=postgres
spring.datasource.password=${CHRONOVACCIN_PASSWORD}

jwt.secret=${JWT_SECRET}
jwt.expirationMs=86400000

spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
# (Optionnel) Configurer un nom commun pour le client si vous n'utilisez pas le nom par défaut "google"
# spring.security.oauth2.client.registration.google.client-name=Google

# (Optionnel) Redirection vers une page spécifique après une connexion réussie
# spring.security.oauth2.client.success-redirect-uri=/dashboard

# Cloud SQL configuration (for local development using the proxy)
spring.cloud.gcp.sql.instance-connection-name=chronovaccin:europe-west9:chronovaccin
spring.cloud.gcp.sql.database-name=postgres
spring.cloud.gcp.sql.enabled=false # Disables the starter to avoid conflicts

spring.cloud.gcp.spanner.instanceId=chronovaccin
spring.cloud.gcp.spanner.database=postgres

spring.jpa.database-platform=com.google.cloud.spanner.hibernate.SpannerDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
